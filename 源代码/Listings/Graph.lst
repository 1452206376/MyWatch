C51 COMPILER V9.56.0.0   GRAPH                                                             01/10/2021 21:14:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE GRAPH
OBJECT MODULE PLACED IN .\Objects\Graph.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Graph.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\Graph.lst) TABS(2) OBJECT(.\Objects\Graph.obj)

line level    source

   1          #include "config.h"
   2          
   3          
   4          
   5          /////////////////////////////////////////
   6          //»æÍ¼Ä£Ê½
   7          float graph_data[128];
   8          uint8_t data_pos = 0;
   9          uint8_t graph_view_x = 0;
  10          int8_t now_y, last_y;
  11          uint8_t now_x;
  12          float scale;
  13          float graph_max, graph_min;
  14          int32_t current_y;
  15          uint8_t get_y(uint8_t x);
  16          
  17          
  18          void graph_init()
  19          {
  20   1        for(now_x = 0; now_x < 128; ++now_x)
  21   1        {
  22   2          graph_data[now_x] = 0;
  23   2        }
  24   1        graph_view_x = 0;
  25   1        data_pos = 0;
  26   1        now_x = 0;
  27   1        now_y = 0;
  28   1        last_y = 0;
  29   1        scale = 0.0f;
  30   1        oled_stop_refresh();
  31   1        graph_draw();
  32   1      }
  33          
  34          void graph_add_num(float num)
  35          {
  36   1        graph_data[data_pos++] = num;
  37   1        data_pos &= 0x7f;
  38   1        graph_draw();
  39   1      }
  40          
  41          void graph_draw(void)
  42          {
  43   1        uint8_t i;
  44   1        oled_clear_buffer();
  45   1        now_y = 0;
  46   1        graph_max = graph_min = graph_data[0];
  47   1        for(now_x = 1;now_x < 128; ++now_x)
  48   1        {
  49   2          if(graph_max < graph_data[now_x])
  50   2          {
  51   3            graph_max = graph_data[now_x];
  52   3          }
  53   2          if(graph_min > graph_data[now_x])
  54   2          {
C51 COMPILER V9.56.0.0   GRAPH                                                             01/10/2021 21:14:19 PAGE 2   

  55   3            graph_min = graph_data[now_x];
  56   3          }
  57   2        }
  58   1        if(graph_max == graph_min)
  59   1        {
  60   2          oled_drawhline(0,128,26);
  61   2          goto information;
  62   2        }
  63   1        if(graph_min > 0) scale = 27.0f/(graph_max);
  64   1        else if(graph_max < 0) scale = 27.0f/(graph_min);
  65   1        else scale = 27.0f/(graph_max - graph_min);
  66   1        oled_drawhline(0,128,27);
  67   1        last_y = get_y(data_pos);
  68   1        ++data_pos;
  69   1        for(i = 1; i < 128; ++i)
  70   1        {
  71   2          now_y = get_y(data_pos);
  72   2          if(last_y > now_y)
  73   2          {
  74   3            oled_draw_line(i, now_y, i, last_y);
  75   3          }
  76   2          else if(last_y == now_y)
  77   2          {
  78   3            oled_draw_dot(i, now_y);
  79   3          }
  80   2          else
  81   2          {
  82   3            oled_draw_line(i, last_y, i, now_y);
  83   3          }
  84   2          ++data_pos;
  85   2          data_pos &= 0x7f;
  86   2          last_y = now_y;
  87   2        }
  88   1        information:
  89   1        current_y = (int32_t)(graph_data[(graph_view_x + data_pos) & 127] * 1000);
  90   1        sprintf(oled_tmpstr, "%bu, %ld.%03ld", graph_view_x, current_y/1000, labs(current_y % 1000));
  91   1        oled_draw_6x8(0, 7, oled_tmpstr);
  92   1        oled_draw_line(graph_view_x, 0, graph_view_x, 55);
  93   1        //oled_draw_line(0, get_y(data_pos), 127, get_y(data_pos));
  94   1        oled_send_buffer();
  95   1      }
  96          
  97          
  98          uint8_t get_y(uint8_t x)
  99          {
 100   1        int8_t result;
 101   1        result = graph_data[x] * scale;
 102   1        result += 27.0f;
 103   1        return 54-result;
 104   1      }
 105          
 106          void graph_move_axis(int8_t offset)
 107          {
 108   1        graph_view_x += offset;
 109   1        graph_view_x &= 127;
 110   1        graph_draw();
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1181    ----
   CONSTANT SIZE    =     15    ----
C51 COMPILER V9.56.0.0   GRAPH                                                             01/10/2021 21:14:19 PAGE 3   

   XDATA SIZE       =    541    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
