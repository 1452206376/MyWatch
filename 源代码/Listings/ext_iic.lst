C51 COMPILER V9.56.0.0   EXT_IIC                                                           01/10/2021 16:07:06 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE EXT_IIC
OBJECT MODULE PLACED IN .\Objects\ext_iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ext_iic.c LARGE OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\ext_iic.lst) TABS(2) OBJECT(.\Objects\ext_iic.obj)

line level    source

   1          #include "config.h"
   2          
   3          void ext_iic_wait()
   4          {
   5   1          while (!(I2CMSST & 0x40));
   6   1          I2CMSST &= ~0x40;
   7   1      }
   8          
   9          void ext_iic_start()
  10          { P_SW2 |= 0x80;
  11   1          I2CMSCR = 0x01;                             //发送START命令
  12   1          ext_iic_wait();
  13   1        P_SW2 &= 0x7f;
  14   1      }
  15          
  16          void ext_iic_write(uint8_t dat)
  17          { P_SW2 |= 0x80;
  18   1          I2CTXD = dat;                               //写数据到数据缓冲区
  19   1          I2CMSCR = 0x02;                             //发送SEND命令
  20   1          ext_iic_wait();
  21   1        P_SW2 &= 0x7f;
  22   1      }
  23          
  24          void ext_iic_recv_ack()
  25          { P_SW2 |= 0x80;
  26   1          I2CMSCR = 0x03;                             //发送读ACK命令
  27   1          ext_iic_wait();
  28   1        P_SW2 &= 0x7f;
  29   1      }
  30          
  31          uint8_t ext_iic_read()
  32          { uint8_t result;
  33   1       P_SW2 |= 0x80;
  34   1          I2CMSCR = 0x04;                             //发送RECV命令
  35   1          ext_iic_wait();
  36   1        P_SW2 &= 0x7f;
  37   1         result = I2CRXD;
  38   1        return result;
  39   1      }
  40          
  41          void ext_iic_send_ack()
  42          { P_SW2 |= 0x80;
  43   1          I2CMSST = 0x00;                             //设置ACK信号
  44   1          I2CMSCR = 0x05;                             //发送ACK命令
  45   1          ext_iic_wait();
  46   1        P_SW2 &= 0x7f;
  47   1      }
  48          
  49          void ext_iic_send_nak()
  50          { P_SW2 |= 0x80;
  51   1          I2CMSST = 0x01;                             //设置NAK信号
  52   1          I2CMSCR = 0x05;                             //发送ACK命令
  53   1          ext_iic_wait();
  54   1        P_SW2 &= 0x7f;
C51 COMPILER V9.56.0.0   EXT_IIC                                                           01/10/2021 16:07:06 PAGE 2   

  55   1      }
  56          
  57          void ext_iic_stop()
  58          { P_SW2 |= 0x80;
  59   1          I2CMSCR = 0x06;                             //发送STOP命令
  60   1          ext_iic_wait();
  61   1        P_SW2 &= 0x7f;
  62   1      }
  63          
  64          uint8_t ext_iic_read_addr(uint8_t devaddr, uint8_t addr)
  65          {
  66   1        uint8_t result;
  67   1        ext_iic_start();
  68   1        ext_iic_write(devaddr);
  69   1        ext_iic_recv_ack();
  70   1        ext_iic_write(addr);
  71   1        ext_iic_recv_ack();
  72   1        
  73   1        ext_iic_start();
  74   1        ext_iic_write(devaddr+1);
  75   1        ext_iic_recv_ack();
  76   1        result = ext_iic_read();
  77   1        ext_iic_send_nak();
  78   1        ext_iic_stop();
  79   1        return result;
  80   1      }
  81          void ext_iic_write_addr(uint8_t devaddr, uint8_t addr, uint8_t dat)
  82          {
  83   1        ext_iic_start();
  84   1        ext_iic_write(devaddr);
  85   1        ext_iic_recv_ack();
  86   1        ext_iic_write(addr);
  87   1        ext_iic_recv_ack();
  88   1        ext_iic_write(dat);
  89   1        ext_iic_recv_ack();
  90   1        ext_iic_stop();
  91   1      }
  92          
  93          void ext_iic_init()
  94          {
  95   1        P_SW2 |= 0x80;
  96   1        P_SW2 |= 0x10;
  97   1        I2CCFG = 0xe0;                              //使能I2C主机模式
  98   1        I2CMSST = 0x00;
  99   1        P_SW2 &= 0x7f;
 100   1      }
 101          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    322    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
