C51 COMPILER V9.56.0.0   MORSE                                                             01/26/2021 18:03:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MORSE
OBJECT MODULE PLACED IN .\Objects\morse.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE morse.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\morse.lst) TABS(2) OBJECT(.\Objects\morse.obj)

line level    source

   1          #include "config.h"
   2          
   3          unsigned char* code MorseTable[] = {
   4            ".-",
   5            "-...",
   6            "-.-.",
   7            "-..",
   8            ".",
   9            "..-.",
  10            "--.",
  11            "....",
  12            "..",
  13            ".---",
  14            "-.-",
  15            ".-..",
  16            "--",
  17            "-.",
  18            "---",
  19            ".--.",
  20            "--.-",
  21            ".-.",
  22            "...",
  23            "-",
  24            "..-",
  25            "...-",
  26            ".--",
  27            "-..-",
  28            "-.--",
  29            "--..",
  30            "-----",
  31            ".----",
  32            "..---",
  33            "...--",
  34            "....-",
  35            ".....",
  36            "-....",
  37            "--...",
  38            "---..",
  39            "----."
  40          };
  41          unsigned char code AsciiTable[] = "abcdefghijklmnopqrstuvwxyz0123456789";
  42          
  43          
  44          unsigned char morse_input_str[MAX_INPUT_STR] = {0};       //ÊäÈëµÄ×Ö·û´®
  45          unsigned char morse_input_chr[MAX_INPUT_CHR] = {0};               //ÊäÈëµÄ×Ö·û
  46          bit lastState = 1;
  47          uint8_t strPointer = 0;                 //×Ö·û´®Ö¸Õë
  48          uint8_t chrPointer = 0;                   //×Ö·ûÖ¸Õë
  49          
  50          uint32_t key_release_time = 0;
  51          #define MORSE_KEY keyOK
  52          #define MORSE_KEY_PIN KEY_OK
  53          #define MORSE_DEL_KEY keyUp
  54          void handleStrOverflow()
C51 COMPILER V9.56.0.0   MORSE                                                             01/26/2021 18:03:19 PAGE 2   

  55          {
  56   1        
  57   1      }
  58          
  59          void handleNotFound()
  60          {
  61   1        
  62   1      }
  63          
  64          void findMorse()
  65          {
  66   1        unsigned char i;
  67   1        morse_input_chr[chrPointer] = 0;
  68   1        for(i = 0; i < MORSE_TOTAL; ++i)
  69   1        {
  70   2          if(strcmp(morse_input_chr, MorseTable[i]) == 0)
  71   2          {
  72   3            morse_input_str[strPointer++] = AsciiTable[i];
  73   3            if(strPointer == MAX_INPUT_STR)
  74   3            {
  75   4              morse_input_str[strPointer] = 0;
  76   4              handleStrOverflow();
  77   4              strPointer = 0;
  78   4            }
  79   3            chrPointer = 0;
  80   3            morse_input_str[strPointer] = 0;
  81   3            morse_updated = 1;
  82   3            return;
  83   3          }
  84   2        }
  85   1        handleNotFound();
  86   1        chrPointer = 0;
  87   1      }
  88          
  89          
  90          void morseUpdate()
  91          {
  92   1        if(MORSE_KEY_PIN == 0)
  93   1        {
  94   2          key_release_time = 0;
  95   2          if(MORSE_KEY.press_time == KEY_LONG_PRESS_TIME)
  96   2          {
  97   3            morse_finished = 1;
  98   3            strPointer = 0;
  99   3            return;
 100   3          }
 101   2        }
 102   1        else    //KEY == 1
 103   1        {
 104   2          if(key_release_time == 1)
 105   2          {
 106   3            if(MORSE_KEY.press_time == 0)
 107   3            {
 108   4              
 109   4            }
 110   3            else if(MORSE_KEY.press_time < DA_TIME)     //.
 111   3            {
 112   4              morse_input_chr[chrPointer++] = '.';
 113   4            }
 114   3            else if(MORSE_KEY.press_time < KEY_LONG_PRESS_TIME)               //-
 115   3            {
 116   4              morse_input_chr[chrPointer++] = '-';
C51 COMPILER V9.56.0.0   MORSE                                                             01/26/2021 18:03:19 PAGE 3   

 117   4            }
 118   3            if(chrPointer == MAX_INPUT_CHR)
 119   3            {
 120   4              chrPointer = 0;
 121   4            }
 122   3          }
 123   2          else if(key_release_time == CHR_TIME && chrPointer != 0)
 124   2          {
 125   3            morse_input_chr[chrPointer] = 0;
 126   3            findMorse();
 127   3            chrPointer = 0;
 128   3            return;
 129   3          }
 130   2          else if(key_release_time == SPACE_TIME)
 131   2          {
 132   3            morse_input_str[strPointer++] = ' ';
 133   3            morse_input_str[strPointer] = 0;
 134   3            if(strPointer == MAX_INPUT_STR)strPointer = 0;
 135   3            morse_updated = 1;
 136   3          }
 137   2          key_release_time++;
 138   2        }
 139   1        if(MORSE_DEL_KEY.pressed == 1)
 140   1        {
 141   2          MORSE_DEL_KEY.pressed = 0;
 142   2          if(strPointer != 0)
 143   2          {
 144   3            strPointer--;
 145   3            morse_input_str[strPointer] = 0;
 146   3            morse_updated = 1;
 147   3          }
 148   2        }
 149   1        else if(MORSE_DEL_KEY.longpressed == 1)
 150   1        {
 151   2          MORSE_DEL_KEY.longpressed = 0;
 152   2          morse_mode = 0;
 153   2        }
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =    313    ----
   XDATA SIZE       =     62       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
